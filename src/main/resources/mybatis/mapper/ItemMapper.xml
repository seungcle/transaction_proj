<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="subak.example.subak.dao.ItemDAO">
	<select id="findAll" parameterType="map"  resultType="SimpleItemResponseVO">
		select i.id, i.title, TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, i.end_time AS endTime,
		i.status, i.created_at AS createdAt,
        (
            SELECT ii.image_url
            FROM item_image ii
            WHERE ii.item_id = i.id
            ORDER BY ii.id ASC
            FETCH FIRST 1 ROW ONLY
        ) AS imageUrl
	    from item i
	    ORDER BY i.id DESC
	    OFFSET #{offset} ROWS
	    FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	<resultMap id="itemWithImagesResultMap" type="ItemResponseDTO" autoMapping="true">
    	<result property="sellerNickname" column="nickname"/>
    
	    <collection property="imageUrl" ofType="java.lang.String">
	        <result column="image_url"/>
	    </collection>
  	</resultMap>
  <select id="findItemById" parameterType="long" resultMap="itemWithImagesResultMap">
    SELECT 
        i.id,
        i.title,
        i.text,
        TO_CHAR(i.start_price, 'FM999,999,999') || '원' AS startPrice,
        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice,
        i.end_time,
        i.status,
        i.created_at,
        u.nickname,
        ii.image_url
    FROM 
        item i
    LEFT JOIN 
        "user" u ON i.seller_id = u.id
    LEFT JOIN 
        item_image ii ON i.id = ii.item_id
    WHERE
        i.id = #{id}
  </select>
	<insert id="insertItem" parameterType="ItemRequestDTO" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
	    INSERT INTO item (title, text, start_price, current_price, end_time, created_at, status, seller_id, category_id)
	    VALUES (#{title}, #{text}, #{startPrice}, #{currentPrice}, sysdate + #{duration}, sysdate, #{status}, #{sellerId}, #{categoryId})
	</insert>
	
	<insert id="insertItemImage" parameterType="ItemImageDTO">
	    INSERT INTO item_image (image_url, created_at, item_id)
	    VALUES (#{imageUrl},sysdate, #{itemId})
	</insert>
	<select id="findByCategory" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM
	        item i
	    WHERE 
	        category_id = (SELECT id FROM category WHERE name = #{category})
	    ORDER BY 
	        i.id DESC
	    OFFSET #{offset} ROWS
	    FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	<select id="findByTitleContainingIgnoreCase" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	    WHERE
	        UPPER(i.title) LIKE '%' || UPPER(#{search}) || '%'
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findByTitleContainingIgnoreCaseWithPrice" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	    WHERE
	        UPPER(i.title) LIKE '%' || UPPER(#{search}) || '%' and i.current_price BETWEEN #{minPrice} AND #{maxPrice}
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
</mapper>









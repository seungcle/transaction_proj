<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="subak.example.subak.dao.ItemDAO">
	<select id="findAll" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT
	        i.id,
	        i.title,
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice,
	        i.end_time AS endTime,
	        i.status,
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl,
	        COUNT(f.id) AS favoriteCount
	    FROM
	        item i
	        LEFT JOIN favorite f ON i.id = f.item_id
	    WHERE i.status = 'OPEN'
	    GROUP BY
	        i.id,
	        i.title,
	        i.current_price,
	        i.end_time,
	        i.status,
	        i.created_at
	    ORDER BY
	        favoriteCount DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<resultMap id="itemWithImagesResultMap" type="ItemResponseDTO" autoMapping="true">
    	<result property="sellerNickname" column="nickname"/>
    	<result property="roomId" column="room_id"/>
	    <collection property="imageUrl" ofType="java.lang.String">
	        <result column="image_url"/>
	    </collection>
  	</resultMap>
  <select id="findItemById" parameterType="long" resultMap="itemWithImagesResultMap">
	    SELECT 
	        i.id,
	        i.title,
	        i.text,
	        TO_CHAR(i.start_price, 'FM999,999,999') || '원' AS startPrice,
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice,
	        i.end_time,
	        i.status,
	        i.created_at,
	        u.nickname,
	        ii.image_url,
	        acr.id AS room_id,
	        u.id AS userId
	    FROM 
	        item i
	    LEFT JOIN 
	        "user" u ON i.seller_id = u.id
	    LEFT JOIN 
	        item_image ii ON i.id = ii.item_id
	    LEFT JOIN  -- 이 블록이 추가되었습니다.
        	auction_chat_room acr ON i.id = acr.item_id
	    WHERE
	        i.id = #{id}
  </select>
	<insert id="insertItem" parameterType="ItemRequestDTO" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
	    INSERT INTO item (title, text, start_price, current_price, end_time, created_at, status, seller_id, category_id)
	    VALUES (#{title}, #{text}, #{startPrice}, #{currentPrice}, sysdate + #{duration}, sysdate, #{status}, #{sellerId}, #{categoryId})
	</insert>
	
	<insert id="insertBid" parameterType = "subak.example.subak.domain.BidDTO" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO bid (bid_price, created_at, bid_item_id, bid_user_id)
        VALUES (#{bidPrice}, sysdate, #{bidItemId}, #{bidUserId}) 
    </insert>
    
    <update id="updateItem" parameterType="map">
    UPDATE item
    SET
        CURRENT_PRICE = #{price}
    WHERE id = #{id}
    </update>
	
	<insert id="insertItemImage" parameterType="ItemImageDTO">
	    INSERT INTO item_image (image_url, created_at, item_id)
	    VALUES (#{imageUrl},sysdate, #{itemId})
	</insert>
	<select id="findByCategory" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM
	        item i
	    WHERE 
	        category_id = (SELECT id FROM category WHERE name = #{category})
	    ORDER BY 
	        i.id DESC
	    OFFSET #{offset} ROWS
	    FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	<select id="findByTitleContainingIgnoreCase" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	    WHERE
	        UPPER(i.title) LIKE '%' || UPPER(#{search}) || '%'
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findByTitleContainingIgnoreCaseWithPrice" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	        <if test="category != null and category != ''">
	            JOIN category c ON i.category_id = c.id
	        </if>
	    WHERE
	        UPPER(i.title) LIKE '%' || UPPER(#{search}) || '%' 
	        AND i.current_price BETWEEN #{minPrice} AND #{maxPrice}
	        <if test="category != null and category != ''">
	            AND c.name = #{category}
	        </if>
	        <if test="excludeEnded == true">
	            AND i.status = 'OPEN'
	        </if>
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findOrderByPriceAsc" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	        <if test="category != null and category != ''">
	            JOIN category c ON i.category_id = c.id
	        </if>
	    WHERE
	        UPPER(i.title) LIKE '%' || UPPER(#{search}) || '%' 
	        AND i.current_price BETWEEN #{minPrice} AND #{maxPrice}
	        <if test="category != null and category != ''">
	            AND c.name = #{category}
	        </if>
	        <if test="excludeEnded == true">
	            AND i.status = 'OPEN'
	        </if>
	    ORDER BY 
	        i.current_price ASC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findOrderByIdDesc" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	        <if test="category != null and category != ''">
	            JOIN category c ON i.category_id = c.id
	        </if>
	    WHERE
	        UPPER(i.title) LIKE '%' || UPPER(#{search}) || '%' 
	        AND i.current_price BETWEEN #{minPrice} AND #{maxPrice}
	        <if test="category != null and category != ''">
	            AND c.name = #{category}
	        </if>
	        <if test="excludeEnded == true">
	            AND i.status = 'OPEN'
	        </if>
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findOrderByPriceDesc" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	        <if test="category != null and category != ''">
	            JOIN category c ON i.category_id = c.id
	        </if>
	    WHERE
	        UPPER(i.title) LIKE '%' || UPPER(#{search}) || '%' 
	        AND i.current_price BETWEEN #{minPrice} AND #{maxPrice}
	        <if test="category != null and category != ''">
	            AND c.name = #{category}
	        </if>
	        <if test="excludeEnded == true">
	            AND i.status = 'OPEN'
	        </if>
	    ORDER BY 
	        i.current_price DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findOrderByFavoriteDesc" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT
	        i.id,
	        i.title,
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice,
	        i.end_time AS endTime,
	        i.status,
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl,
	        COUNT(f.id) AS favoriteCount
	    FROM
	        item i
	        LEFT JOIN favorite f ON i.id = f.item_id
	        <if test="category != null and category != ''">
	            JOIN category c ON i.category_id = c.id
	        </if>
	    WHERE
	        UPPER(i.title) LIKE '%' || UPPER(#{search}) || '%'
	        AND i.current_price BETWEEN #{minPrice} AND #{maxPrice}
	        <if test="category != null and category != ''">
	            AND c.name = #{category}
	        </if>
	        <if test="excludeEnded == true">
	            AND i.status = 'OPEN'
	        </if>
	    GROUP BY
	        i.id,
	        i.title,
	        i.current_price,
	        i.end_time,
	        i.status,
	        i.created_at
	    ORDER BY
	        favoriteCount DESC
	    OFFSET
	        #{offset} ROWS
	    FETCH NEXT
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findByUserId" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	    WHERE
	        i.seller_id = #{userId}
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findByUserIdAndStatusOpen" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	    WHERE
	        i.seller_id = #{userId} and i.status = 'OPEN'
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findSaleCompleteByUserId" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	    WHERE
	        i.seller_id = #{userId}
	        AND EXISTS (
	            SELECT 1 
	            FROM transaction t 
	            WHERE t.item_id = i.id
	        )
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findPurchaseCompleteByUserId" parameterType="map" resultType="SimpleItemResponseVO">
	    SELECT 
	        i.id, 
	        i.title, 
	        TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice, 
	        i.end_time AS endTime,
	        i.status, 
	        i.created_at AS createdAt,
	        (
	            SELECT ii.image_url
	            FROM item_image ii
	            WHERE ii.item_id = i.id
	            ORDER BY ii.id ASC
	            FETCH FIRST 1 ROW ONLY
	        ) AS imageUrl
	    FROM 
	        item i
	    WHERE
	        EXISTS (
	            SELECT 1 
	            FROM transaction t 
	            WHERE t.item_id = i.id
	              AND t.user_id = #{userId}
	        )
	    ORDER BY 
	        i.id DESC
	    OFFSET 
	        #{offset} ROWS
	    FETCH NEXT 
	        #{pageSize} ROWS ONLY
	</select>
	<select id="findFavoriteItemByUserId" parameterType="map" resultType="SimpleItemResponseVO">
        SELECT
            i.id,
            i.title,
            TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice,
            i.end_time AS endTime,
            i.status,
            f.created_at AS favoritedAt, -- 사용자가 찜한 날짜
            (
                SELECT ii.image_url
                FROM item_image ii
                WHERE ii.item_id = i.id
                ORDER BY ii.id ASC
                FETCH FIRST 1 ROW ONLY
            ) AS imageUrl
        FROM
            favorite f
            INNER JOIN item i ON f.item_id = i.id
        WHERE
            f.user_id = #{userId}
        ORDER BY
            f.created_at DESC -- 가장 최근에 찜한 순서로 정렬
        OFFSET
            #{offset} ROWS
        FETCH NEXT
            #{pageSize} ROWS ONLY
    </select>
	<select id="searchEndTime" resultType="ItemRequestDTO">
     SELECT
          i.id,
          i.SELLER_ID,
          b.BID_USER_ID AS winner_id,
          i.CURRENT_PRICE,
          i.START_PRICE,
          i.end_time
     FROM
          item i
     JOIN (
          SELECT
               BID_ITEM_ID,
               BID_USER_ID,
               ROW_NUMBER() OVER (PARTITION BY BID_ITEM_ID ORDER BY BID_PRICE DESC, CREATED_AT DESC) AS rn
          FROM
               bid
     ) b ON i.id = b.BID_ITEM_ID
     WHERE
          i.end_time &lt; sysdate
          AND i.status = 'OPEN'
          AND b.rn = 1
 	</select>
     
     <update id="updateStatus">
     	UPDATE item
    	SET
        	status = #{status}
    	WHERE id = #{itemId}
    </update>
    <select id="findBiddedItemsByUserId" parameterType="map" resultType="SimpleItemResponseVO">
        SELECT DISTINCT
            i.id,
            i.title,
            -- 가격을 '123,456원' 형식의 문자열로 변환
            TO_CHAR(i.current_price, 'FM999,999,999') || '원' AS currentPrice,
            i.end_time AS endTime,
            i.status,
            i.created_at AS createdAt,
            -- 스칼라 서브쿼리를 이용해 해당 아이템의 첫 번째 이미지를 조회
            (
                SELECT ii.image_url
                FROM item_image ii
                WHERE ii.item_id = i.id
                ORDER BY ii.id ASC
                FETCH FIRST 1 ROW ONLY
            ) AS imageUrl
        FROM
            -- bid 테이블을 기준으로 item 테이블과 조인
            bid b
        JOIN
            item i ON b.bid_item_id = i.id
        WHERE
            b.bid_user_id = #{userId}   -- 조건 1: 특정 사용자가 입찰한 아이템
            AND i.status = 'OPEN'      -- 조건 2: 아이템 상태가 'OPEN'인 경우
            AND b.bid_user_id != i.seller_id
        ORDER BY
            i.id DESC
        -- 페이징 처리
        OFFSET
            #{offset} ROWS
        FETCH NEXT
            #{pageSize} ROWS ONLY
    </select>
    <select id="getSellerIdByItemId" parameterType="long" resultType="long">
        SELECT seller_id
        FROM item
        WHERE id = #{itemId}
    </select>
</mapper>








